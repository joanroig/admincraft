name: Build and Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Bump Version & Release"]
    types:
      - completed

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - platform: android
            os: ubuntu-latest
            build_cmd: flutter build apk --release
            output: build/app/outputs/flutter-apk/app-release.apk
            ext: apk
          - platform: windows
            os: windows-latest
            build_cmd: flutter build windows --release
            output: build/windows/x64/runner/Release/admincraft.exe
            ext: zip
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install dependencies
        run: flutter pub get
      - name: Build ${{ matrix.platform }}
        run: ${{ matrix.build_cmd }}
      - name: Get version
        id: get_version
        shell: bash
        run: |
          VERSION=$(cat pubspec.yaml | grep version: | awk '{print $2}')
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION_OUT=${GITHUB_REF#refs/tags/}
          else
            VERSION_OUT=${VERSION}-${{ github.run_number }}
          fi
          echo "version=$VERSION_OUT" >> $GITHUB_OUTPUT
      - name: Prepare Windows zip
        if: matrix.platform == 'windows'
        shell: bash
        run: |
          cd build/windows/x64/runner/Release
          zip -r admincraft-windows-${{ steps.get_version.outputs.version }}.zip admincraft.exe flutter_windows.dll url_launcher_windows_plugin.dll data
      - name: Move output to build dir with version
        shell: bash
        run: |
          mkdir -p dist
          mv ${{ matrix.output }} dist/admincraft-${{ matrix.platform }}-${{ steps.get_version.outputs.version }}.${{ matrix.ext }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: admincraft-${{ matrix.platform }}-${{ steps.get_version.outputs.version }}
          path: dist/admincraft-${{ matrix.platform }}-${{ steps.get_version.outputs.version }}.${{ matrix.ext }}
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get version
        id: get_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            PRERELEASE=false
          else
            VERSION=$(cat pubspec.yaml | grep version: | awk '{print $2}')-${{ github.run_number }}
            PRERELEASE=true
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "prerelease=$PRERELEASE" >> $GITHUB_OUTPUT
      - name: Collect built files
        run: |
          mkdir -p dist
      - name: Download android artifact
        uses: actions/download-artifact@v4
        with:
          name: admincraft-android-${{ steps.get_version.outputs.version }}
          path: dist
      - name: Download windows artifact
        uses: actions/download-artifact@v4
        with:
          name: admincraft-windows-${{ steps.get_version.outputs.version }}
          path: dist
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          prerelease: ${{ steps.get_version.outputs.prerelease }}
          generate_release_notes: true
          files: |
            dist/admincraft-android-${{ steps.get_version.outputs.version }}.apk
            dist/admincraft-windows-${{ steps.get_version.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Delete build artifacts from GitHub
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            admincraft-android-${{ steps.get_version.outputs.version }}
            admincraft-windows-${{ steps.get_version.outputs.version }}
